# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

stages:
- stage:
  pool:
    sonarqube
  jobs:
  - job: MavenBuild
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'Sonarqube testing'
        scannerMode: 'Other'
        extraProperties: |
          ## Additional properties that will be passed to the scanner,
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
           sonar.projectKey=My_Project_My_Project_AYm_NFSbYgAWN8qpdIGE
           sonar.projectName=My_Project


    
    # - task: Maven@4
    #   inputs:
    #     mavenPomFile: 'pom.xml'
    #     publishJUnitResults: true
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     javaHomeOption: 'JDKVersion'
    #     # jdkVersionOption: '1.11'
    #     mavenVersionOption: 'Default'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: true
    #     sqMavenPluginVersionChoice: 'latest'
        
    # - task: SonarQubePublish@5
    #   inputs:
    #     pollingTimeoutSec: '300'
   
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '/lib/jvm/java-11-openjdk-amd64'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
    
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'

    - task: CopyPublishBuildArtifacts@1
      inputs:
        CopyRoot: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.war'
        ArtifactName: 'artifact'
        ArtifactType: 'Container'
    # - task: CopyFiles@2
    #   displayName: 'Copy Files to artifact staging directory'
    #   inputs:
    #       SourceFolder: '$(System.DefaultWorkingDirectory)'
    #       Contents: '**/target/*.war'
    #       TargetFolder: $(Build.ArtifactStagingDirectory)
    
    # - upload: $(Build.ArtifactStagingDirectory)
    #   artifact: artifact
   # - task: SnykSecurityScan@1
   #   inputs:
   #     serviceConnectionEndpoint: 'Snyk'
    #    testType: 'app'
      #  monitorWhen: 'always'
    #    failOnIssues: false
      #  projectName: 'employee_registration'
    
- stage:
  pool:
    sonarqube
  jobs:
  - job: Deploy
    steps:
    - script:
        echo $(Build.ArtifactStagingDirectory)